options:
	bot: NerdPR

	staffchat-channel: 827365238856089600

on skript load:
	set {uptime} to now

command /uptime:
	trigger:
		send "<##f24b4b>&lUPTIME &8| &7The server has been online for <##f78181>%time since {uptime}%&7."

on load:
	delete {words::*}
	set {words::1} to "prisons"
	set {words::2} to "mine"
	set {words::3} to "orca"
	set {words::4} to "flames"
	set {words::5} to "pickaxe"
	set {words::6} to "nerd"
	set {words::7} to "brain"
	set {words::8} to "lightbulb"
	set {words::9} to "keyboard"
	set {words::10} to "mouse"
	set {words::11} to "webcam"
	set {words::12} to "block"
	set {words::13} to "mhf"
	set {words::14} to ""

	delete {mines::*}
	set {mines::1} to {spawn}
	set {mines::2} to location(-366, 85, -517, world "world")
	set {mines::3} to location(-923, 69, -450, world "world")
	set {mines::4} to location(-1414, 78, -389, world "world", 90, 0)
	set {mines::5} to location(-1338, 61, -795, world "world", 90, 0)

	delete {alerts::*}
	add "Remember to join our discord. (/discord)" to {alerts::*}
	add "Right-click your pickaxe to enchant!" to {alerts::*}

command /mine:
	aliases: /mines
	trigger:
		open virtual chest with 3 rows named "<##f24b4b>&lMINES" to player
		fillSlots(player, 3)
		format gui slot 10 of player with white terracotta named "&a&lMINE 1" with lore "" and "&7&o(( Requires no prestige ))" to run:
			teleport player to {mines::1}
		format gui slot 11 of player with yellow terracotta named "&c&lMINE 2" with lore "" and "&7&o(( Requires prestige 2 ))"
		format gui slot 12 of player with blue terracotta named "&c&lMINE 3" with lore "" and "&7&o(( Requires prestige 5 ))"
		format gui slot 13 of player with green terracotta named "&c&lMINE 4" with lore "" and "&7&o(( Requires prestige 10 ))"
		format gui slot 14 of player with red terracotta named "&c&lMINE 5" with lore "" and "&7&o(( Requires prestige 20 ))"
		if {prestige::%player's uuid%} >= 2:
			format gui slot 11 of player with yellow terracotta named "&a&lMINE 2" with lore "" and "&7&o(( Requires prestige 2 ))" to run:
				teleport player to {mines::2}
		if {prestige::%player's uuid%} >= 5:
			format gui slot 12 of player with blue terracotta named "&a&lMINE 3" with lore "" and "&7&o(( Requires prestige 5 ))" to run:
				teleport player to {mines::3}
		if {prestige::%player's uuid%} >= 10:
			format gui slot 13 of player with green terracotta named "&a&lMINE 4" with lore "" and "&7&o(( Requires prestige 10 ))" to run:
				teleport player to {mines::4}
		if {prestige::%player's uuid%} >= 20:
			format gui slot 14 of player with red terracotta named "&a&lMINE 4" with lore "" and "&7&o(( Requires prestige 20 ))" to run:
				teleport player to {mines::5}

on tab complete:
	if event-string is "/skript" or "/sk":
		set tab completions for position 1 to "reload", "enable", "disable", "update" and "help"
		set tab completions for position 2 to all scripts


function getMulti(p: player) :: number:
	set {_u} to {_p}'s uuid
	set {_prestige} to {prestige::%{_u}%} * 0.01
	return 1 + {_prestige} + ({multiplier::%{_u}%} ? 0)

function updateScoreboard(p: player):
	set {_u} to {_p}'s uuid
	set title of {_p}'s scoreboard to "<##f24b4b>&lNERDPR &7&o(%size of all players%)"
	set line 15 of {_p}'s scoreboard to ""
	set {_level} to insertComma({level::%{_u}%} ? 0)
	set line 14 of {_p}'s scoreboard to "&8| &7Level: <##f78181>%{_level}%"
	set {_prestige} to insertComma({prestige::%{_u}%} ? 0)
	set line 13 of {_p}'s scoreboard to "&8| &7Prestige: <##f78181>%{_prestige}%"
	set {_rebirth} to insertComma({rebirth::%{_u}%} ? 0)
	set line 12 of {_p}'s scoreboard to "&8| &7Rebirth: <##f78181>%{_rebirth}%"
	set line 11 of {_p}'s scoreboard to ""
	set {_mined} to formatNumber({mined::%{_u}%} ? 0)
	set line 10 of {_p}'s scoreboard to "&8| &7Mined: <##f78181>%{_mined}%"
	set {_balance} to formatNumber({balance::%{_u}%} ? 0)
	set line 9 of {_p}'s scoreboard to "&8| &7Balance: <##f78181>$%{_balance}%"
	set line 8 of {_p}'s scoreboard to "&8| &7Multiplier: <##f78181>%getMulti({_p})%x"
	set line 7 of {_p}'s scoreboard to ""
	set line 6 of {_p}'s scoreboard to "&7&onerdpr.minehut.gg"

command /stats <player=%player%>:
	trigger:
		set {_p} to arg-1
		set {_u} to arg-1's uuid
		send centered "&8&m------------ &r<##f78181>%{_p}%'s Statistics &8&m--------------" to player
		set {_level} to insertComma({level::%{_u}%} ? 0)
		send "&8| &7Level: <##f78181>%{_level}%"
		set {_prestige} to insertComma({prestige::%{_u}%} ? 0)
		send "&8| &7Prestige: <##f78181>%{_prestige}%"
		set {_rebirth} to insertComma({rebirth::%{_u}%} ? 0)
		send "&8| &7Rebirth: <##f78181>%{_rebirth}%"
		send ""
		set {_mined} to formatNumber({mined::%{_u}%} ? 0)
		send "&8| &7Mined: <##f78181>%{_mined}%"
		set {_balance} to formatNumber({balance::%{_u}%} ? 0)
		send "&8| &7Balance: <##f78181>$%{_balance}%"
		send "&8| &7Multiplier: <##f78181>%getMulti({_p})%x"
		send centered "&8&m--------------------------------------" to player

on join:
	set join message to "<##f78181>%player%&7 joined the game."
	wait 1 tick
	player is online
	if player's inventory does not contain diamond pickaxe:
		give player updatePickaxe(diamond pickaxe named "&e&lPICKAXE" with nbt "{HideFlags:7b,xpn:100}")
	toggle scoreboard of player to on
	loop all players:
		updateScoreboard(loop-player)

on quit:
	if {ban::%player's uuid%::type} is not set:
		set quit message to "<##f78181>%player%&7 left the game."
	else:
		set quit message to ""
	wait 1 tick
	loop all players:
		updateScoreboard(loop-player)

command /getpick:
	permission: staff.getpick
	permission message: &cNo Permission.
	trigger:
		give player updatePickaxe(diamond pickaxe named "&e&lPICKAXE" with nbt "{HideFlags:7b,xpn:100}")

command /getmaxedpick:
	permission: op
	permission message: &cNo Permission.
	trigger:
		give player updatePickaxe(diamond pickaxe named "&c&lADMIN PICKAXE" with nbt "{HideFlags:7b,efficiency:500,fortune:1000000,jump:1,flight:1,tokenfinder:500,keyfinder:5000,explosive:500,jackhammer:1000,slice:1000,layer:500,laser:500,cube:500,xpfinder:250,chunk:5000,tsunami:10000,xpn:100}")

on item damage:
	cancel event

on hunger meter change:
	cancel event

on offhand switch:
	cancel event

on drop:
	player is not op
	cancel event

command /playtime <player=%player%>:
	trigger:
		send "<##f24b4b>&lPLAYTIME &8| <##f78181>%arg-1%'s&7 playtime is <##f78181>%time played of arg-1%&7."

command /reloadall:
	permission: *
	permission message: &cNo Permission.
	trigger:
		set {_s} to now
		loop all scripts where [input is not "config.sk" or "color.sk"]:
			set {_m} to now
			reload script loop-value
			send "Took %time since {_m}% to reload %loop-value%."
		send "Took %time since {_s}% to reload all scripts." to all players where [input has permission "*"]

on pressure plate:
	push player forwards at speed 2.5
	push player upwards at speed 1.5

command /multi <player=%player%>:
	trigger:
		send "<##f24b4b>&lMULTI &8| <##f78181>%arg-1%<##f78181>'s&7 multiplier is <##f78181>%getMulti(arg-1)%&7."

command /rules:
	trigger:
		send centered "don't be a bitch" to player

function staffchat(p: player, m: text):
	send "<##f24b4b>&lSTAFFCHAT &8| <##f78181>%player% &f%{_m}%" to all players where [input has permission "staff.chat"]
	send "**%player%**: %{_m}%" to channel with id "{@staffchat-channel}" with "{@bot}"

command /sc [<text>]:
	permission: staff.chat
	permission message: &cNo Permission.
	usage: &cUsage: /sc <text>
	aliases: /staffchat
	trigger:
		if arg-1 is not set:
			if metadata "staffchat" of player is not set:
				set metadata "staffchat" of player to true
				send "<##f24b4b>&lSTAFFCHAT &8|&7 Toggled on."
			else:
				delete metadata "staffchat" of player
				send "<##f24b4b>&lSTAFFCHAT &8|&7 Toggled off."
		else:
			staffchat(player, message)

command /vanish:
	permission: staff.vanish
	permission message: &cNo Permission.
	usage: &cUsage: /vanish
	aliases: /v
	trigger:
		if metadata "vanish" of player is not set:
			set metadata "vanish" of player to true
			hide player from all players where [input does not have permission "staff.vanish"]
			make player execute command "sc"
		else:
			delete metadata "vanish" of palyer
			reveal player from all players
			make player execute command "sc"

on join:
	delete metadata "vanish" of player
	if player has permission "staff.vanish":
		hide all players where [metadata "vanish" of player is true] from player

on chat:
	metadata "staffchat" of player is set
	cancel event
	staffchat(player, message)

every 4.9 minutes:
	make console execute command "broadcast %random element out of {alerts::*}%"

every 5.1 minutes:
	delete {reaction::*}
	set {reaction::word} to random element out of {words::*}
	set {reaction::start} to now
	broadcast "<##f24b4b>&lREACTION &8| &7Type <##f78181>%{reaction::word}%&7 to a reward!"

on chat:
	event is not canceled
	if {reaction::word} is set:
		if message is {reaction::word}:
			cancel event
			broadcast "<##f24b4b>&lREACTION &8| &7<##f78181>%player%&7 typed <##f78181>%{reaction::word}%&7 in <##f78181>%time since {reaction::start}%&7."
			giveKey(player, "iq")
			delete {reaction::*}

command /reaction [<text>]:
	permission: op
	permission message: &cNo Permission.
	trigger:
		delete {reaction::*}
		set {reaction::word} to arg-1 if arg-1 is set, else random element out of {words::*}
		set {reaction::start} to now
		broadcast "<##f24b4b>&lREACTION &8| &7Type <##f78181>%{reaction::word}%&7 to a reward!"

function updateLeaderboards():
	broadcast "<##f24b4b>&lLEADERBOARDS &8| &7Leaderboards are updating. This may cause lag!"
	set {_sorted::*} to sort((indices of {mined::*}), {mined::*})
	set {_total} to formatNumber(sum({mined::*}))
	set {_n} to 0
	loop {_sorted::*}:
		add 1 to {_n}
		set {_p} to loop-value parsed as a offline player
		set {_v} to formatNumber({mined::%loop-value%})
		make console execute command "hd setline mined %{_n} + 1% <##f78181>%{_n}%. &f%{_p}% <##f78181>%{_v}%"
		if {_n} >= 10:
			exit loop
	make console execute command "hd setline mined 12 &7&o(( Total: %{_total}% ))"

	set {_sorted::*} to sort((indices of {balance::*}), {balance::*})
	set {_total} to formatNumber(sum({balance::*}))
	set {_n} to 0
	loop {_sorted::*}:
		add 1 to {_n}
		set {_p} to loop-value parsed as a offline player
		set {_v} to formatNumber({balance::%loop-value%})
		make console execute command "hd setline balance %{_n} + 1% <##f78181>%{_n}%. &f%{_p}% <##f78181>%{_v}%"
		if {_n} >= 10:
			exit loop
	make console execute command "hd setline balance 12 &7&o(( Total: %{_total}% ))"

	set {_sorted::*} to sort((indices of {prestige::*}), {prestige::*})
	set {_total} to formatNumber(sum({prestige::*}))
	set {_n} to 0
	loop {_sorted::*}:
		add 1 to {_n}
		set {_p} to loop-value parsed as a offline player
		set {_v} to formatNumber({prestige::%loop-value%})
		make console execute command "hd setline prestige %{_n} + 1% <##f78181>%{_n}%. &f%{_p}% <##f78181>%{_v}%"
		if {_n} >= 10:
			exit loop
	make console execute command "hd setline prestige 12 &7&o(( Total: %{_total}% ))"

every 10 minutes:
	updateLeaderboards()

command /forceleaderboards:
	permission: op
	permission message: &cNo Permission.
	trigger:
		updateLeaderboards()

on command:
	command is "minecraft:me" or "me"
	cancel event

on flight toggle:
	player is not op
	if "%region at player%" contains "event":
		cancel event

command /daily:
	trigger:
		if time since {daily::%player's uuid%} < 24 hours:
			set {_} to difference between 24 hours and (time since {daily::%player's uuid%})
			send "&cYou cannot claim this for another %{_}%."
			stop
		set {daily::%player's uuid%} to now
		send "<##f24b4b>&lDAILY &8| &7You claimed your daily reward."
		giveKey(player, "iq")


command /levelsneeded:
	aliases: /prestige
	trigger:
		send "<##f2b84b>&lLEVELS &8| &7You need <##f7b481>%(({prestige::%player's uuid%} ? 0) * 5 + 10)%<##f7b481> levels&7 to prestige."