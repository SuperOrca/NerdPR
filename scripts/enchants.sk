function getTag(t: item, e: text) :: number:
	return (tag {_e} of nbt of {_t}) ? 0

function getTags(t: item) :: objects:
	add (getTag({_t}, "efficiency") and "Efficiency") to {_e::*}
	add (getTag({_t}, "fortune") and "Fortune") to {_e::*}
	add (getTag({_t}, "jump") and "Jump") to {_e::*}
	add (getTag({_t}, "flight") and "Flight") to {_e::*}
	add (getTag({_t}, "tokenfinder") and "Tokenfinder") to {_e::*}
	add (getTag({_t}, "keyfinder") and "Keyfinder") to {_e::*}
	add (getTag({_t}, "explosive") and "Explosive") to {_e::*}
	add (getTag({_t}, "jackhammer") and "Jackhammer") to {_e::*}
	add (getTag({_t}, "slice") and "Slice") to {_e::*}
	add (getTag({_t}, "chunk") and "Chunk") to {_e::*}
	add (getTag({_t}, "tsunami") and "Tsunami") to {_e::*}
	return {_e::*}

function updatePickaxe(t: item) :: item:
	updateScoreboard({_p})
	set line 1 of {_t}'s lore to ""
	set line 2 of {_t}'s lore to "<##f2b84b>&l| &7Level: &f0"
	set line 3 of {_t}'s lore to "<##f2b84b>&l| &7Points: &f0"
	set line 4 of {_t}'s lore to "<##f2b84b>&l| &7Progress: &f0%%"
	set line 5 of {_t}'s lore to ""
	set {_enchs::*} to getTags({_t})
	loop ((size of {_enchs::*})/2) times:
		set {_level} to {_enchs::%loop-value * 2 - 1%}
		set {_enchant} to {_enchs::%loop-value * 2%}
		set line (loop-value + 5) of {_t}'s lore to "&8&l| &7%{_enchant}%&7 %insertComma({_level})%"
	enchant {_t} with "efficiency %getTag({_t}, ""efficiency"")%" parsed as a enchantment type
	return {_t}

function upgradePickaxe(p: player, t: item, e: text, l: number, m: number, gct: text):
	set {_u} to {_p}'s uuid
	if {_gct} contains "middle":
		close {_p}'s inventory
		set metadata "thread" of {_p} to true
		while 1 = 1:
			set {_l} to getTag({_p}'s tool, {_e})
			set {_pr} to enchantPrice({_e}, {_l})
			if {balance::%{_u}%} >= {_pr}:
				if {_l} < {_m}:
					add "{%{_e}%:%getTag({_t}, {_e})+1%}" to nbt of {_t}
					remove {_pr} from {balance::%{_u}%}
					playSound({_p}, "ENTITY_VILLAGER_YES")
					send "<##4b8bf2>&lENCHANT &7Purchased <##81aef7>%{_e}%&7 for <##81aef7>$%formatNumber({_pr})%&7." to {_p}
					set {_p}'s tool to updatePickaxe({_t})
					updateScoreboard({_p})
					wait 1 tick
				else:
					playSound({_p}, "ENTITY_VILLAGER_NO")
					send "&cYou already maxed this enchant." to {_p}
					exit loop
			else:
				playSound({_p}, "ENTITY_VILLAGER_NO")
				send "&cYou need $%formatNumber({_pr} - {balance::%{_u}%})%&c more to buy this!" to {_p}
				exit loop
		delete metadata "thread" of {_p}
	else:
		set {_pr} to enchantPrice({_e}, {_l})
		if {balance::%{_u}%} >= {_pr}:
			if {_l} < {_m}:
				add "{%{_e}%:%getTag({_t}, {_e})+1%}" to nbt of {_t}
				remove {_pr} from {balance::%{_u}%}
				playSound({_p}, "ENTITY_VILLAGER_YES")
				send "<##4b8bf2>&lENCHANT &7Purchased <##81aef7>%{_e}%&7 for <##81aef7>$%formatNumber({_pr})%&7." to {_p}
				set {_p}'s tool to updatePickaxe({_t})
				updateScoreboard({_p})
			else:
				playSound({_p}, "ENTITY_VILLAGER_NO")
				send "&cYou already maxed this enchant." to {_p}
		else:
			playSound({_p}, "ENTITY_VILLAGER_NO")
			send "&cYou need $%formatNumber({_pr} - {balance::%{_u}%})%&c more to buy this!" to {_p}
		pickaxeInv({_p})

function displayPickaxeInv(p: player):
	open virtual chest with 6 rows named "<##4b8bf2>&lUPGRADE PICKAXE" to {_p}
	fillSlots({_p}, 6)
	playSound({_p}, "ENTITY_BAT_TAKEOFF")
	pickaxeInv({_p})

function enchantPrice(e: text, l: number) :: number:
	return ({_l}*5000)^(1.14)+20000 if {_e} is "efficiency"
	return ({_l}*12500)^(1.17)+25000 if {_e} is "fortune"
	return 10000000 if {_e} is "jump"
	return 50000000 if {_e} is "flight"
	return ({_l}*250000)^(1.14)+1000000 if {_e} is "tokenfinder"
	return ({_l}*100000)^(1.155)+400000 if {_e} is "keyfinder"
	return ({_l}*125000)^(1.14)+500000 if {_e} is "explosive"
	return ({_l}*150000)^(1.15)+600000 if {_e} is "jackhammer"
	return ({_l}*150000)^(1.15)+600000 if {_e} is "slice"
	return ({_l}*175000)^(1.16)+750000 if {_e} is "chunk"
	return ({_l}*250000)^(1.17)+1000000 if {_e} is "tsunami"
	return 0

function enchantMax(e: text) :: number:
	return 500 if {_e} is "efficiency"
	return 1000000 if {_e} is "fortune"
	return 1 if {_e} is "jump"
	return 1 if {_e} is "flight"
	return 500 if {_e} is "tokenfinder"
	return 5000 if {_e} is "keyfinder"
	return 500 if {_e} is "explosive"
	return 1000 if {_e} is "jackhammer"
	return 1000 if {_e} is "slice"
	return 5000 if {_e} is "chunk"
	return 10000 if {_e} is "tsunami"
	return 0

function guiPickaxeItem(p: player, slot: number, item: item, enchant: text):
	set {_tool} to {_p}'s tool
	set {_level} to getTag({_tool}, {_enchant})
	set {_max} to enchantMax({_enchant})

	set {_item} to {_item} named "<##81aef7>%{_enchant} in proper case% &7(%insertComma({_level})%/%insertComma({_max})%)" with lore "" and "&7Price: <##81aef7>$%formatNumber(enchantPrice({_enchant}, {_level}))%" and "" and "<##81aef7>Click &7to buy one." and "<##81aef7>MMB &7to buy as many as possible."
	format gui slot {_slot} of {_p} with {_item} to run:
		upgradePickaxe({_p}, {_tool}, {_enchant}, {_level}, {_max}, "%gui-click-type%")

function pickaxeInv(p: player):
	set {_u} to {_p}'s uuid
	set {_t} to {_p}'s tool

	format gui slot 4 of {_p} with {_p}'s skull

	guiPickaxeItem({_p}, 19, hopper, "jackhammer")
	guiPickaxeItem({_p}, 21, iron sword, "slice")
	guiPickaxeItem({_p}, 23, chest, "tokenfinder")
	guiPickaxeItem({_p}, 25, emerald, "fortune")
	guiPickaxeItem({_p}, 29, tnt, "explosive")
	guiPickaxeItem({_p}, 31, arrow, "efficiency")
	guiPickaxeItem({_p}, 33, feather, "flight")
	guiPickaxeItem({_p}, 37, rabbit foot, "jump")
	guiPickaxeItem({_p}, 39, anvil, "chunk")
	guiPickaxeItem({_p}, 41, water bucket, "tsunami")
	guiPickaxeItem({_p}, 43, lectern, "keyfinder")

on right click:
	player's tool is pickaxe
	metadata "thread" of player is not set
	displayPickaxeInv(player)

on join:
	set player's flight mode to false if player is not op
	remove jump boost from player

on hotbar switch:
	if metadata "thread" of player is true:
		cancel event
	if getTag(player's tool, "jump") > 0:
		apply jump boost of tier 2 without any particles to player for 999 days
	if getTag(player's tool, "flight") > 0:
		set player's flight mode to true

on inventory open:
	metadata "thread" of player is true
	cancel event