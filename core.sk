function updateScoreboard(p: player):
	set {_u} to {_p}'s uuid
	set title of {_p}'s scoreboard to "&f&lNERDPR &7&o(%size of all players%)"
	set line 15 of {_p}'s scoreboard to ""
	set {_level} to formatNumber({level::%{_u}%} ? 0)
	set line 14 of {_p}'s scoreboard to "&8| &7Level: &f%{_level}%"
	set {_prestige} to formatNumber({level::%{_u}%} ? 0)
	set line 13 of {_p}'s scoreboard to "&8| &7Prestige: &f%{_prestige}%"
	set {_rebirth} to formatNumber({level::%{_u}%} ? 0)
	set line 12 of {_p}'s scoreboard to "&8| &7Rebirth: &f%{_rebirth}%"
	set line 11 of {_p}' scoreboard to ""
	set {_mined} to formatNumber({mined::%{_u}%} ? 0)
	set line 10 of {_p}'s scoreboard to "&8| &7Mined: &f%{_mined}%"
	set {_balance} to formatNumber({balance::%{_u}%} ? 0)
	set line 9 of {_p}'s scoreboard to "&8| &7Balance: &f$%{_balance}%"
	set line 8 of {_p}'s scoreboard to "&8| &7Multiplier: &f1x"
	set line 7 of {_p}'s scoreboard to ""
	set line 6 of {_p}'s scoreboard to "&7&onerdpr.minehut.gg"

command /stats <player=%player%>:
	trigger:
		send centered "&f%arg-1%&f's stats" to player
		set {_u} to arg-1's uuid
		send "&8│"
		set {_level} to formatNumber({level::%{_u}%} ? 0)
		send "&8│ &7Level: &f%{_level}%"
		set {_progress} to progressBar(({xp::%{_u}%} ? 0), ({xpn::%{_u}%} ? 100), 20, "&f", "&8")
		send "&8│ &7Progress: %{_progress}%"
		send "&8│"
		set {_mined} to formatNumber({mined::%{_u}%} ? 0)
		send "&8│ &7Mined: &f%{_mined}%"
		set {_balance} to formatNumber({balance::%{_u}%} ? 0)
		send "&8│ &7Balance: &f$%{_balance}%"
		send "&8│ &7Multiplier: &f1x"
		send "&8│"

on join:
	set join message to "&f%player%&7 joined the game."
	if player's inventory does not contain diamond pickaxe:
		give player updatePickaxe(player, diamond pickaxe named "&f&lPICKAXE" with nbt "{HideFlags:7b}")
	toggle scoreboard of player to on
	loop all players:
		updateScoreboard(loop-player)

on quit:
	set quit message to "&f%player%&7 left the game."
	loop all players:
		updateScoreboard(loop-player)

on item damage:
	cancel event

on hunger meter change:
	cancel event

on damage:
	damage cause is fall
	cancel event

on drop:
	item is pickaxe or sword or bow or trident or tripwire hook
	cancel event

command /playtime [<player>]:
	trigger:
		send "&f%arg-1 ? player%'s&7 playtime is &f%time played of arg-1 ? time played of player%&7."

command /reloadall:
	permission: *
	permission message: &cNo Permission.
	trigger:
		set {_s} to now
		loop all scripts where [input is not "config.sk" or "color.sk"]:
			set {_m} to now
			reload script loop-value
			send "Took %time since {_m}% to reload %loop-value%."
		send "Took %time since {_s}% to reload all scripts." to all players where [input has permission "*"]

command /rules:
	trigger:
		send centered "don't be a bitch" to player